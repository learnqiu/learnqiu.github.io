{"meta":{"title":"learnQIU","subtitle":null,"description":"冷秋","author":"learnqiu","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2020-12-28T11:13:24.716Z","updated":"2020-12-28T11:13:24.716Z","comments":true,"path":"gallery.json","permalink":"http://example.com/gallery.json","excerpt":"","text":"[{\"name\":\"峨眉山之行\",\"cover\":\"https://i.loli.net/2020/10/05/kBcvAf7INgMLaem.jpg\",\"date\":\"2017-10\",\"description\":\"峨眉山之行\",\"url_name\":\"峨眉山之行\",\"album\":[{\"img_url\":\"https://i.loli.net/2020/10/05/qtOevHpw5XImS1J.jpg\",\"title\":\"峨眉山之行\",\"describe\":\"峨眉山之行\"},{\"img_url\":\"https://i.loli.net/2020/10/05/4acvniMKTx8euqp.jpg\",\"title\":\"峨眉山之行\",\"describe\":\"峨眉山之行\"},{\"img_url\":\"https://i.loli.net/2020/10/05/4acvniMKTx8euqp.jpg\",\"title\":\"峨眉山之行\",\"describe\":\"峨眉山之行\"}]}]"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-12-19T15:46:46.325Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"[冷秋] 与&nbsp; learnQIU&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-12-23T05:03:54.889Z","comments":false,"path":"bangumi/index.html","permalink":"http://example.com/bangumi/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-12-19T15:09:21.148Z","comments":false,"path":"client/index.html","permalink":"http://example.com/client/index.html","excerpt":"","text":"直接下载 or 扫码下载："},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-12-19T15:09:29.057Z","comments":true,"path":"comment/index.html","permalink":"http://example.com/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"categories","date":"2020-03-09T05:50:05.000Z","updated":"2020-12-15T13:36:07.868Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"donate","date":"2020-12-14T15:13:05.000Z","updated":"2020-12-20T06:06:53.334Z","comments":false,"path":"donate/index.html","permalink":"http://example.com/donate/index.html","excerpt":"","text":""},{"title":"gallery","date":"2020-12-28T11:07:21.000Z","updated":"2020-12-28T11:07:50.100Z","comments":true,"path":"gallery/index.html","permalink":"http://example.com/gallery/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-12-19T15:09:46.127Z","comments":false,"path":"lab/index.html","permalink":"http://example.com/lab/index.html","excerpt":"","text":"sakura主题balabala"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-12-20T06:19:56.184Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-12-19T15:12:04.042Z","comments":false,"path":"music/index.html","permalink":"http://example.com/music/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-12-14T02:15:33.698Z","comments":true,"path":"rss/index.html","permalink":"http://example.com/rss/index.html","excerpt":"","text":""},{"title":"shuoshuo","date":"2020-12-23T07:09:38.472Z","updated":"2020-12-23T07:09:38.472Z","comments":false,"path":"shuoshuo/index.html","permalink":"http://example.com/shuoshuo/index.html","excerpt":"","text":"new Artitalk({ appId: '5OP5QaruBdEJ4SL0Xx4j3oEk-gzGzoHsz', // Your leancloud appId appKey: 'pjqBQAhK38HG6fE4Sg2YHjsw', // Your leancloud appKey serverURL: 'www.learnqiu.top' })"},{"title":"tags","date":"2020-12-15T13:25:51.000Z","updated":"2020-12-15T13:25:51.493Z","comments":false,"path":"tags/index-1.html","permalink":"http://example.com/tags/index-1.html","excerpt":"","text":""},{"title":"tags","date":"2020-12-15T13:28:05.000Z","updated":"2020-12-15T13:28:55.016Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-12-14T02:15:33.700Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://example.com/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-12-14T02:15:33.701Z","comments":false,"path":"video/index.html","permalink":"http://example.com/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }"},{"title":"个人随拍","date":"2020-12-28T11:09:21.000Z","updated":"2020-12-28T11:10:10.747Z","comments":true,"path":"gallery/个人随拍/index.html","permalink":"http://example.com/gallery/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E6%8B%8D/index.html","excerpt":"","text":""},{"title":"生活碎片","date":"2020-12-28T11:09:21.000Z","updated":"2020-12-28T11:10:22.681Z","comments":true,"path":"gallery/生活碎片/index.html","permalink":"http://example.com/gallery/%E7%94%9F%E6%B4%BB%E7%A2%8E%E7%89%87/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"tech-sql-01","date":"2021-01-11T05:19:51.000Z","updated":"2021-01-14T10:55:48.260Z","comments":true,"path":"posts/archives/0.html/","link":"","permalink":"http://example.com/posts/archives/0.html/","excerpt":"","text":"34道SQL作业题表结构员工表 部门表 薪资等级表 – 1、取得每个部门最高薪水的人员名称– STEP1 取得每个部门最高薪水（按照部门编号编组，找出每一组最大值） SELECT DEPTNO,MAX(SAL) MAXSAL FROM EMP GROUP BY DEPTNO; – STEP2 与人员表连接，连接条件：where t.DEPTNO = e.DEPTNO AND t.MAXSAL = e.SAL SELECT e.ename,e.sal,e.DEPTNO from (SELECT DEPTNO,MAX(SAL) MAXSAL FROM EMP GROUP BY DEPTNO) t join EMP e on t.DEPTNO = e.DEPTNO AND t.MAXSAL = e.SAL; – STEP2 与人员表连接，连接条件：where t.DEPTNO = e.DEPTNO AND t.MAXSAL = e.SAL SELECT e.ename,e.sal,e.DEPTNO from (SELECT DEPTNO,MAX(SAL) MAXSAL FROM EMP GROUP BY DEPTNO) t join EMP e on t.DEPTNO = e.DEPTNO AND t.MAXSAL = e.SAL; – 2、哪些人的薪水在部门的平均薪水之上– STEP1 找出每个部门平均薪水 SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO; – STEP2 与人员表连接，连接条件：where t.DEPTNO = e.DEPTNO AND t.AVGSAL &lt; e.SAL SELECT e.ename,e.sal,e.DEPTNO,t.AVGSAL from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t join EMP e on t.DEPTNO = e.DEPTNO AND t.AVGSAL &lt; e.SAL; – 3、取得部门中（所有人的）平均的薪水等级– STEP1 取得部门中（所有人的）的薪水等级– 与等级表连接，连接条件：where e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL– 也可使用连接条件：e.SAL BETWEEN s.LOSAL AND s.HISAL SELECT s.GRADE,e.* from EMP e join SALGRADE s on e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL; – STEP2 取得部门中（所有人的）平均的薪水等级 SELECT t.DEPTNO,AVG(t.GRADE) AVGGRADE FROM (SELECT s.GRADE,e.* from EMP e join SALGRADE s on e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL)t group by t.DEPTNO; – STEP2 取得部门中（所有人的）平均的薪水等级 SELECT t.DEPTNO,AVG(t.GRADE) AVGGRADE FROM (SELECT s.GRADE,e.* from EMP e join SALGRADE s on e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL)t group by t.DEPTNO; – STEP2 直接使用group by和分组函数 不使用临时表 SELECT DEPTNO,AVG(GRADE) AVGGRADE FROM EMP e join SALGRADE s on e.SAL BETWEEN s.LOSAL AND s.HISAL group by DEPTNO; ​ ​ – 4、不准用组函数（Max），取得最高薪水– 方案一 采用SAL排序,取第一行rownum=1 SELECT sal from (SELECT * from emp order by SAL desc) t where rownum=1; – 方案二 表的自连接 注意思路 select sal from emp where sal not in (SELECT distinct a.sal from emp a join emp b on a.sal &lt; b.sal); – 方案三 MAX SELECT MAX(sal) from emp; – 5、取得平均薪水最高的部门的部门编号– 方案一：降序取第一个 SELECT * FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL DESC) m where rownum = 1; – 方案二：MAX 注意having后面跟着AVG(SAL)，mysql可以直接跟AVGSAL SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO HAVING AVG(SAL) = (SELECT MAX(AVGSAL) from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO)); – 6、取得平均薪水最高的部门的部门名称SELECT DNAME from DEPT where DEPTNO = (SELECT DEPTNO FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL DESC) m where rownum = 1); – 7、求平均薪水的等级最低的部门的部门名称– 错误解法 SELECT DNAME from DEPT where DEPTNO = (SELECT DEPTNO FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL ) m where rownum = 1); – 注意平均薪水最低，平均薪水等级一定最低，但是平均薪水不是最低，平均薪水等级也有可能是最低– 所以平均薪水等级最低的有可能是多个，不能通过降序取第一个部门编号，而是取最低等级拿等级做筛选– STEP1 取得所有部门平均薪水的等级 SELECT m.*,t.* FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL ) m JOIN SALGRADE t ON m.AVGSAL BETWEEN t.LOSAL AND t.HISAL; – STEP2 取得最低的平均薪水的等级 SELECT MIN(GRADE) FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL ) m JOIN SALGRADE t ON m.AVGSAL BETWEEN t.LOSAL AND t.HISAL; – STEP3 取得平均薪水的等级最低的部门的部门名称 SELECT DNAME from DEPT where DEPTNO = (SELECT DEPTNO FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL ) m JOIN SALGRADE t ON m.AVGSAL BETWEEN t.LOSAL AND t.HISAL where GRADE = (SELECT MIN(GRADE) FROM (SELECT * from (SELECT DEPTNO,AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) t ORDER BY AVGSAL ) m JOIN SALGRADE t ON m.AVGSAL BETWEEN t.LOSAL AND t.HISAL)); – 8、取得比普通员工(员工代码没有在mgr字段上出现的)的最高薪水还要高的领导人姓名– STEP1 取得普通员工 SELECT distinct MGR FROM EMP WHERE MGR IS not null; – STEP2 取得普通员工最高薪水 not in 在使用时后面括号中的结果要排除null SELECT MAX(SAL) MAXSAL from EMP where EMPNO not in (SELECT distinct MGR FROM EMP WHERE MGR IS not null); – STEP3 取得比普通员工(员工代码没有在mgr字段上出现的)的最高薪水还要高的领导人姓名 SELECT ENAME from EMP where EMPNO in (SELECT distinct MGR FROM EMP WHERE MGR IS not null) and SAL &gt; (SELECT MAX(SAL) MAXSAL from EMP where EMPNO not in (SELECT distinct MGR FROM EMP WHERE MGR IS not null)); – 9、取得薪水最高的前五名员工SELECT * from (SELECT * from EMP ORDER BY SAL DESC) t WHERE rownum &lt;6; – 10、取得薪水最高的第六到第十名员工 mysql使用 limmit 5,5SELECT * from (SELECT * from (SELECT * from (SELECT * from EMP ORDER BY SAL DESC) t WHERE rownum &lt;11) tt ORDER BY SAL) ttt WHERE rownum &lt;6; – 11、取得最后入职的5名员工SELECT * from (SELECT * from EMP ORDER BY HIREDATE DESC)WHERE rownum &lt;6; – 12、取得每个薪水等级有多少员工– STEP1 获得员工等级 SELECT s.GRADE,e.* from EMP e join SALGRADE s on e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL; – STEP2 按员工等级分组计数 ​ SELECT t.GRADE,COUNT(*) FROM (SELECT s.GRADE,e.* from EMP e join SALGRADE s on e.SAL &gt;= s.LOSAL AND e.SAL &lt;= s.HISAL)t group by t.GRADE; ​ – 13、面试题– 14、列出所有员工及领导的姓名– 错误解法:使用join后，会缺少king的信息 SELECT A.ENAME,B.ENAME FROM EMP A JOIN EMP B ON A.MGR = B.EMPNO; – 正确解法:使用left join后，会保证左边表格的信息的完整性，如果未匹配到信息则以null显示,这样KING的信息正常显示 SELECT A.ENAME,B.ENAME FROM EMP A LEFT JOIN EMP B ON A.MGR = B.EMPNO; – 15.列出受雇日期早于其直接上级的所有员工的编号,姓名,部门名称– 注意此时使用JOIN ,join可以连用 SELECT A.ENAME 员工,B.ENAME 领导,d.DNAME 部门名称,a.HIREDATE 员工受雇日期,b.HIREDATE 领导受雇日期 FROM EMP A JOIN EMP B ON A.MGR = B.EMPNO JOIN DEPT d ON a.deptno = d.deptno where A.HIREDATE &lt; B.HIREDATE; – 16、列出部门名称和这些部门的员工信息,同时列出那些没有员工的部门SELECT a.DNAME,b.* FROM DEPT a left join EMP b on a.DEPTNO = b.DEPTNO; ​ – 17、列出至少有5个员工的所有部门– SETP1 按DEPTNO分组计数 SELECT DEPTNO,count(*) from emp group by DEPTNO; – SETP2 获取至少5个员工的所有部门 SELECT DEPTNO,count(*) from emp group by DEPTNO having count(*)&gt;4; – 18、列出薪金比”SMITH”多的所有员工信息– SETP1 获取”SMITH”的薪金 SELECT SAL from emp WHERE ENAME = &#39;SMITH&#39;; – STEP2 列出薪金比”SMITH”多的所有员工信息 SELECT * from emp WHERE SAL &gt; (SELECT SAL from emp WHERE ENAME = &#39;SMITH&#39;); – 19、列出所有”CLERK”(办事员)的姓名及其部门名称,部门的人数– 列出所有”CLERK”(办事员)姓名及其部门名称,部门的人数 SELECT ENAME,DNAME,ENUM from emp e join dept d on e.DEPTNO = d.DEPTNO JOIN (SELECT DEPTNO,count(*) ENUM from emp group by DEPTNO) t ON e.DEPTNO = t.DEPTNO WHERE JOB = &#39;CLERK&#39;; – 20、列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数– SETP1 获取各种工作的最低薪金 SELECT JOB,MIN(SAL) MINSAL FROM EMP GROUP BY JOB; – SETP2 列出最低薪金大于1500的各种工作 SELECT JOB MINSAL FROM EMP GROUP BY JOB HAVING MIN(SAL) &gt;1500; – SETP2 列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数 按job分组计数后筛选 SELECT JOB,COUNT(*) MINSAL FROM EMP GROUP BY JOB HAVING JOB IN (SELECT JOB MINSAL FROM EMP GROUP BY JOB HAVING MIN(SAL) &gt;1500); – 21、列出在部门”SALES”&lt;销售部&gt;工作的员工的姓名,假定不知道销售部的部门编号SELECT ename FROM EMP e join DEPT d on e.DEPTNO = d.DEPTNO where dname = &#39;SALES&#39;; – 22、列出薪金高于公司平均薪金的所有员工,所在部门,上级领导,雇员的工资等级– SETP1 获取公司平均薪金 SELECT avg(Sal) from emp; – SETP2 连接员工，部门，salgrade表 SELECT * from emp a left join emp b on a.mgr = b.EMPNO join DEPT d on a.DEPTNO = d.DNAME join SALGRADE s on a.sal between s.LOSAL and s.HISAL; – SETP3 获取薪金高于公司平均薪金的所有员工 SELECT a.ENAME 员工,d.dname 部门,a.ENAME 领导,s.GRADE 等级 from emp a left join emp b on a.mgr = b.EMPNO join DEPT d on a.DEPTNO = d.DEPTNO join SALGRADE s on a.sal between s.LOSAL and s.HISAL where a.Sal &gt; (SELECT avg(Sal) from emp); – 23、列出与”SCOTT”从事相同工作的所有员工及部门名称– SETP1 获取”SCOTT”从事的工作 SELECT JOB FROM EMP WHERE ENAME = &#39;SCOTT&#39;; – SETP2 连接人员，部门表 SELECT * FROM EMP e left join dept d on e.DEPTNO = d.DEPTNO; – SETP3 列出与”SCOTT”从事相同工作的所有员工及部门名称 SELECT * FROM EMP e left join dept d on e.DEPTNO = d.DEPTNO where JOB = (SELECT JOB FROM EMP WHERE ENAME = &#39;SCOTT&#39;); – 24、列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金– SETP1 获取30部门员工和其他部门员工 SELECT * FROM EMP where DEPTNO != &#39;30&#39;; SELECT * FROM EMP where DEPTNO = &#39;30&#39;; – SETP2 列出薪金等于部门30中员工的薪金的其他员工的姓名和薪金 SELECT * FROM (SELECT * FROM EMP where DEPTNO != &#39;30&#39;) a join (SELECT * FROM EMP where DEPTNO = &#39;30&#39;) b on a.Sal = b.Sal; – 25、列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金.部门名称– SETP1 获取30部门员工的最高薪资 SELECT MAX(SAL) FROM EMP where DEPTNO = &#39;30&#39;; – SETP2 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金.部门名称 SELECT ENAME,SAL,DNAME FROM EMP E JOIN DEPT D ON E.DEPTNO = D.DEPTNO WHERE SAL &gt; (SELECT MAX(SAL) FROM EMP where DEPTNO = &#39;30&#39;); – 26、列出在每个部门工作的员工数量,平均工资和平均服务期限– SETP1 连接员工，SALGRADE SELECT * from emp a join SALGRADE s on a.sal between s.LOSAL and s.HISAL; – SETP2 分组并计数 SELECT a.DEPTNO 部门编号,count(*) 员工数,avg(a.sal) 平均工资,avg(a.COMM) 平均服务期限 from emp a join SALGRADE s on a.sal between s.LOSAL and s.HISAL group by a.DEPTNO; – 27、列出所有员工的姓名、部门名称和工资select e.ename 员工姓名,d.dname 部门名称,e.sal 工资 from emp e join dept d on e.DEPTNO = d.DEPTNO; – 28、列出所有部门的详细信息和人数SELECT d.*,e.num 人数 from DEPT d join (SELECT DEPTNO,count(*) num from emp group by DEPTNO) e on e.DEPTNO = d.DEPTNO; – 29、列出各种工作的最低工资及从事此工作的雇员姓名– SETP1 列出各种工作的最低工资 SELECT job,min(sal) minsal from emp group by job; – SETP2 上表作为临时表与员工表连接 SELECT e.job,minsal,e.ename,e.sal FROM EMP e join (SELECT job,min(sal) minsal from emp group by job)a on e.job = a.job where sal = minsal; – 30、列出各个部门的MANAGER(领导)的最低薪金– SETP1 列出各个部门的MANAGER SELECT distinct b.ename from emp a join emp b on a.MGR = b.EMPNO; – SETP2 列出各个部门的MANAGER的最低薪金 SELECT min(sal) from emp where ename in (SELECT distinct b.ename from emp a join emp b on a.MGR = b.EMPNO); – 31、列出所有员工的年工资,按年薪从低到高排序SELECT ename,sal*12 from emp order by sal; – 32、求出员工领导的薪水超过3000的员工名称与领导名称SELECT a.ename,b.ename,b.sal from emp a join emp b on a.MGR = b.EMPNO where b.sal &gt;=3000; – 33、求出部门名称中,带’S’字符的部门员工的工资合计、部门人数– SETP1 求出部门名称中,带’S’字符的部门 SELECT deptno from dept where DNAME like &#39;%S%&#39;; – SETP2 求出部门名称中,带’S’字符的部门员工的工资合计、部门人数 SELECT deptno,count(*),sum(sal) from emp where deptno in (SELECT deptno from dept where DNAME like &#39;%S%&#39;) group by DEPTNO; – 34、给任职日期超过30年的员工加薪10%update emp set sal = sal*1.1 where get_year(to_date(sysdate,&#39;yyyy-MM-dd HH24:mi:ss&#39;),to_date(HIREDATE,&#39;yyyy-MM-dd&#39;)) &gt; 30; – 方案二 表的自连接 注意思路 select sal from emp where sal not in (SELECT distinct a.sal from emp a join emp b on a.sal &lt; b.sal); – 方案三 MAX SELECT MAX(sal) from emp;","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"},{"name":"ORACLE","slug":"ORACLE","permalink":"http://example.com/tags/ORACLE/"}],"author":"learnqiu"},{"title":"冷秋 | 书摘","slug":"mind-book-02","date":"2021-01-08T12:57:29.000Z","updated":"2021-01-08T13:11:11.168Z","comments":true,"path":"posts/archives/44545.html/","link":"","permalink":"http://example.com/posts/archives/44545.html/","excerpt":"","text":"冷秋 | 书摘一​ “假如一间铁屋子，是绝无窗户而万难破毁的，里面有许多熟睡的人们，不久都要闷死了，然而是从昏睡入死灭，并不感到就死的悲哀。现在你大嚷起来，惊起了较为清醒的几个人，使这不幸的少数者来受无可挽救的临终的苦楚，你倒以为对得起他们么？” ​ “然而几个人既然起来，你不能说决没有毁坏这铁屋的希望。” ​ – 鲁迅《呐喊》 ​ 二零二一年一月八日 摘 若不呐喊，只得在沉睡中灭亡；而惊醒，才是少数人希望的曙光。 ​ –冷秋 | 给困于铁屋子中熟睡的自己的一声呐喊","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"learnqiu"},{"title":"致2020","slug":"mind-movie-02","date":"2021-01-04T12:01:55.000Z","updated":"2021-01-04T12:20:18.416Z","comments":true,"path":"posts/archives/41181.html/","link":"","permalink":"http://example.com/posts/archives/41181.html/","excerpt":"","text":"致2020谨以下面的视频致我已经过去的2020 健康快乐，顺利毕业！","categories":[{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"剧集","slug":"剧集","permalink":"http://example.com/tags/%E5%89%A7%E9%9B%86/"}],"author":"learnqiu"},{"title":"转载：将hexo博客部署到CentOS个人云服务器","slug":"tech-hexo-05","date":"2021-01-04T11:43:29.000Z","updated":"2021-01-04T12:15:41.696Z","comments":true,"path":"posts/archives/48313.html/","link":"","permalink":"http://example.com/posts/archives/48313.html/","excerpt":"","text":"转载：将hexo博客部署到CentOS个人云服务器转载来源:HEXO 部署到云服务器详细指南 我是按照下面内容进行操作的，最终成功部署到了个人云服务器上。 原文如下： 前段时间薅羊毛了腾讯云的羊毛，花了360软妹纸买了6年的云服务。。。打算把以前托管在github上的hexo部署到个人云服务器。折腾了良久，便有了以下的文章。 一、环境安装1.1 node js 安装yum install gcc-c++ make yum -y install nodejs 验证： node -v npm -v 1.2 安装git、nginxGit 用于版本管理和部署，Nginx 用于静态博客托管。 yum install git nginx -y 1.3 安装hexo我们使用 Node.js 的包管理器 npm 安装 hexo-cli 和 hexo-server npm install hexo-cli hexo-server -g hexo-cli 是 Hexo 的命令行工具，可用于快速新建、发布、部署博客；hexo-server 是 Hexo 的内建服务器，可用于部署前的预览和测试。-g 选项，表示全局安装。 验证 hexo 二、创建git环境参考地址 2.1 在云服务器上创建一个 GIT 用户，用来运行 GIT 服务 创建用户：adduser git 设置密码：passwd git 2.2 创建证书 切换到git用户：su git 创建.ssh目录：mkdir .ssh &amp;&amp; chmod 700 .ssh 然后在云服务创建authorized_keys公钥保存文件：touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys __ tip: __ 公钥保存文件authorized_keys是一行添加一个 2.3 创建git仓库目录创建一个名为blog的git仓库 mkdir /var/repo cd /var/repo git init --bare blog.git 2.4 配置 GIT HOOKSvim /var/repo/blog.git/hooks/post-receive 添加 #!/bin/sh git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f 然后保存退出，并设置权限 chmod +x /var/repo/blog.git/hooks/post-receive 2.5 改变 BLOG.GIT 目录的拥有者为 GIT 用户chown -R git:git blog.git 2.6 创建静态文件目录并将2.3步骤生成的git仓库链接到静态文件目录下 创建静态文件目录（文章网页）：mkdir /var/www/hexo 链接git仓库：chown -R git:git /var/www/hexo 配置权限：chmod -R 755 /var/www/hexo 这样git仓库更新便会自动同步到hexo目录下 2.7、为了安全考虑，禁用GIT用户的SHELL 登录权限配置（下面两个步骤非常重要，否则客户端总是提示密码错误！！！） 首先你必须确保 git-shell 已存在于 /etc/shells 文件中 使用命令which git-shell判断系统是否安装了git-shell。如果已经安装，则返回git-shell的安装目录，如：/usr/bin/git-shell；如果未安装则需要安装git-shell命令，安装命令：yum install git 判断shells文件是否存在，判断命令：cat /etc/shells 如果文件不存在或没有 /usr/bin/git-shell ，则需要使用vim增加这个路径： sudo vim /etc/shells ，在最后一行添加git-shell路径 # /etc/shells: valid login shells /bin/sh /bin/dash /bin/bash /bin/rbash /usr/bin/tmux /usr/bin/screen /usr/bin/git-shell # 添加你的git-shell ``` 现在你可以使用 chsh 命令修改任一系统用户的shell权限了 现在我们修改第一步中创建的git用户的登录权限，禁止git用户使用shell权限： 终端中输入sudo chsh git [图片上传失败…(image-86e8df-1521642804894)] 然后在Login Shell [/bin/bash]: 后输入git-shell路径/usr/bin/git-shell 修改完成后验证： vim /etc/passwd找到类似git:x:1000:1000:,,,:/home/git:/usr/bin/git-shell，看看git用户是否是以git-shell结尾 这样，git用户就只能使用SSH连接对Git仓库进行推送和拉取操作，而不能登录机器并取得普通shell命令 2.8 测试当上述步骤都完成后，我们就可以测试下git服务器是否部署成功，最简单的方法便是使用clone来校验 用户电脑（window or mac）git客户端执行clone操作git clone git@服务器ip:/var/repo/blog.git 当出现下面这种框，然后输入我们在第一步时创建git这个用户的密码就能成功clone了。 ​ git_server 或 ​ git_server 如果clone成功，表示git服务器搭建成功 三、hexo配置打开hexo博客目录，编辑_config.yml文件 修改repository为： deploy: type: git repository: git@ip或域名:/var/repo/blog.git branch: master 然后执行hexo g -d将文件上传到你部署的服务器上，如果上传成功，将如下图所示： article_upload_finish.png 四、nginx配置最后，为了能让浏览器能直接访问静态页面，需要使用nginx将端口或域名指向hexo静态文件目录 4.1 修改 NGINX 的 DEFAULT 设置 ubuntu vim /etc/nginx/sites-available/default centos vim /etc/nginx/conf.d/blog.conf 注意：不同版本的nginx或系统，nginx的配置文件不一定相同，根据具体情况来修改配置 4.2 将其中的 ROOT 指令指向 /var/www/hexo 目录（也就是GIT钩子目录）server &#123; listen 80; listen [::]:80; root /var/www/hexo; # 修改的地方 server_name laoyuyu.me www.laoyuyu.me; # 如果需要改域名访问，修改server_name 为域名便可 location / &#123; # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; &#125; &#125; 4.3 最后重启服务，让NGINX生效service nginx restart 4.4 nginx 常见错误我在配置完Nginx后，启动的时候总是无法正常访问到我的web应用，查看日志文件（/var/log/nginx/error.log）后发现： connect() to 127.0.0.1:8080 failed (13: Permission denied) 从这个错误信息中可以看出是访问权限的问题，解决办法如下： vi /etc/nginx/nginx.conf #user nginx; user root; 其实就是将nginx的用户修改为root用户即可，当然也可以为nginx用户增加相应的权限。 我部署在虚拟机上的个人网站","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客搭建","slug":"hexo博客搭建","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"learnqiu"},{"title":"晚归记-冷秋的第一个Vlog","slug":"video-vlog-01","date":"2020-12-29T08:28:49.000Z","updated":"2021-01-04T12:14:28.014Z","comments":true,"path":"posts/archives/36200.html/","link":"","permalink":"http://example.com/posts/archives/36200.html/","excerpt":"","text":"晚归记-冷秋的第一个Vlog","categories":[{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"剧集","slug":"剧集","permalink":"http://example.com/tags/%E5%89%A7%E9%9B%86/"}],"author":"learnqiu"},{"title":"2021 考研加油","slug":"mind-day-01","date":"2020-12-26T14:54:49.000Z","updated":"2020-12-26T15:10:53.860Z","comments":true,"path":"posts/archives/45480.html/","link":"","permalink":"http://example.com/posts/archives/45480.html/","excerpt":"","text":"2021 考研加油今天， 是无数个梦想的盛会， 因为， 有377万人在风中起舞。 加油考研人！","categories":[{"name":"随想","slug":"随想","permalink":"http://example.com/categories/%E9%9A%8F%E6%83%B3/"}],"tags":[{"name":"随想","slug":"随想","permalink":"http://example.com/tags/%E9%9A%8F%E6%83%B3/"}],"author":"learnqiu"},{"title":"对hexo-sakura主题的鼠标指针图案进行自定义","slug":"tech-hexo-04","date":"2020-12-25T09:30:04.000Z","updated":"2020-12-25T09:51:54.212Z","comments":true,"path":"posts/archives/31864.html/","link":"","permalink":"http://example.com/posts/archives/31864.html/","excerpt":"","text":"对hexo-sakura主题的鼠标指针图案进行自定义前言本文主要介绍如何自定义hexo-sakura主题的鼠标指针图案 实现原理首先hexo-sakura主题自带的鼠标指针方案是黑猫的指针，首先我们找到定义鼠标样式的位置 打开博客根目录/themes/source/css/style.css文件，用ctrl+F 全局搜索“img/cursor/”(第一次可以这样搜索)或者”.cur“（修改后可以用这个定位） 通过查看发现，网站用的图标样式都是调用的cur图标的cdn文件链接 要对光标进行自定义，只用将对于位置的cur文件进行替换就可以了 实现步骤1.网络下载静态光标文件（.cur）,经过测试不支持动态光标文件（.ani） 这里提供我在网上找到的静态光标文件（链接：https://pan.baidu.com/s/1TC8EHD2Wb6CLZv6R0wAvqw 提取码：tvnb ），需要的可以自行下载 2.将需要使用的光标文件上传到你的图床 3.将style.css文件中的链接换成你需要使用的cur文件链接 如： 4.这里说明一下，自定义鼠标光标有两种方式： 方式一：深度定义。实现不同场景展示不同鼠标图案。这种方式需要将style.css文件中的所有cur链接进行自定义替换，替换方法见步骤3。 方式二：全局定义，即所有场景只使用一种鼠标图案。这种方式步骤如下： ​ 1.将styles.css中所有”.cur“图床链接处所在的cursor:…这行删除 ​ 2.在css中加入如下代码，其中链接填你需要全局定义的鼠标光标链接： *&#123; cursor: url(https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/cursor/normal.cur),auto &#125; 实现效果见本站的鼠标光标样式","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客美化","slug":"hexo博客美化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"}],"author":"learnqiu"},{"title":"hexo博客优化记录","slug":"tech-hexo-03","date":"2020-12-23T13:49:07.000Z","updated":"2020-12-29T10:08:00.027Z","comments":true,"path":"posts/archives/48697.html/","link":"","permalink":"http://example.com/posts/archives/48697.html/","excerpt":"","text":"hexo博客优化记录前言本文用于记录本博客优化相关内容。 1.Hexo Sakura为每个帖子创建一个唯一链接参考文献：Hexo Next为每个帖子创建一个唯一链接 安装如下插件 npm install hexo-abbrlink --save 配置 在hexo根目录下config.yml的配置文件设置permalink为 permalink: posts/archives/:abbrlink.html/ 效果 若不能正常生成，执行 hexo clean 2.Hexo Sakura实现文章插入b站视频插件前言由于b站视频的av号不够用了，现在很多视频都是bv号，sakura自带的hexo-tag-bili只支持av号的视频，插件也没有进行更新，下面说一下怎么实现插入b站的视频插件。 实现方法b站视频的分享按钮有生成分享插件代码的功能 初始插件代码为: &lt;iframe src=&quot;//player.bilibili.com/player.html?aid=330803387&amp;bvid=BV1KA411x7YS&amp;cid=272300009&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt; 但是这个插件的尺寸比较小，我们需要对其大小进行定义 在博客根目录\\themes\\Sakura\\source\\css\\style.css文件中加入以下代码: /*哔哩哔哩视频适配 */ .bilibili &#123; position: relative; width: 100%; &#125; @media only screen and (max-width: 767px) &#123; .bilibili &#123;height: 15em;max-width: 25em;&#125; &#125; @media only screen and (min-width: 768px) and (max-width: 991px) &#123; .bilibili &#123;height: 20em;max-width: 30em;&#125; &#125; @media only screen and (min-width: 992px) and (max-width: 1199px) &#123; .bilibili &#123;height: 30em;max-width: 40em;&#125; &#125; @media only screen and (min-width: 1200px) &#123; .bilibili &#123;height: 40em;max-width: 50em;&#125; &#125; 这样的话，在插件中使用这个css样式就可以了 &lt;iframe class=&quot;bilibili&quot; src=&quot;//player.bilibili.com/player.html?aid=330803387&amp;bvid=BV1KA411x7YS&amp;cid=272300009&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt; 使用步骤1.前往b站视频，点击分享按钮，复制插件代码 2.在插件代码中加入 class=&quot;bilibili&quot; 调用css样式 实现效果 案例链接","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客美化","slug":"hexo博客美化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"}],"author":"learnqiu"},{"title":"hexo博客踩坑记录","slug":"tech-hexo-02","date":"2020-12-23T11:22:01.000Z","updated":"2021-01-04T12:00:50.184Z","comments":true,"path":"posts/archives/60549.html/","link":"","permalink":"http://example.com/posts/archives/60549.html/","excerpt":"","text":"hexo博客踩坑记录前言本文用于记录博客搭建过程中遇到的问题及解决办法 1.hexo d后 ERROR Deployer not found: gitnpm install `--`save hexo-deployer-git 即可 参考文献：hexo d后 ERROR Deployer not found: git 2.由于nodejs版本过高导致的部署报错在部署hexo博客时出现以下错误： 即： (node:10524) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency (Use `node --trace-warnings ...` to show where the warning was created) 解决方案：将当前版本的nodejs进行降级到12.x版本即可 具体操作参考：windows如何把已安装的nodejs高版本降级为低版本(图文教程) 3.hexo的skura主题主页视频相关仅支持20M以下MP4格式的视频，这是目前的测试情况，没有找到解决方案。 4.hexo安装指令$ npm install -g hexo-cli","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客搭建","slug":"hexo博客搭建","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"learnqiu"},{"title":"在实验室追完一部剧之后，我决定写一篇检讨","slug":"mind-movie-01","date":"2020-12-21T13:34:10.000Z","updated":"2020-12-23T13:47:26.735Z","comments":true,"path":"posts/archives/4152.html/","link":"","permalink":"http://example.com/posts/archives/4152.html/","excerpt":"","text":"在实验室追完一部剧之后，我决定写一篇检讨前言今天在实验室一口气追完了一部剧，没有学习和写论文，我决定写一篇检讨，来反思一下自己的行为。 正文首先对于在实验室追剧这件事，我觉得有必要反省下。因为为啥之前没有发现如此惬意的划水方式。没有被发现的风险的宝座再加上我熟练的分屏以及键盘操作，简直完美啊， 在此，我反省一下自己为啥之前没有发现这种操作。。。 好了，编不下去了。的确做的不对（在此反省1分钟），但是在写论文和学习之余“偶尔”放松一下，还是非常nice的。 后记附几张截图，来自《弥留之国的爱丽丝》 明天起我一定好好学习。 遁了。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"剧集","slug":"剧集","permalink":"http://example.com/tags/%E5%89%A7%E9%9B%86/"}],"author":"learnqiu"},{"title":"用Python的you-get工具下载b站视频","slug":"tech-python-01","date":"2020-12-21T08:47:42.000Z","updated":"2020-12-23T13:47:26.955Z","comments":true,"path":"posts/archives/51011.html/","link":"","permalink":"http://example.com/posts/archives/51011.html/","excerpt":"","text":"用Python的you-get工具下载b站视频前言本文主要介绍如何下载b站视频 使用前提需要在电脑上安装python工具，具体的下载及安装方法可以参考python官方下载。安装好python并完成环境配置就可以进行下面的步骤了。 you-get工具安装打开cmd命令行工具，具体可以使用win+R快捷键后输入“cmd”后回车即可。 在弹出的对话框中输入： pip install you_get 等待界面显示安装完毕即可 使用you-get工具下载b站视频首先在你需要保存视频的文件夹下打开cmd命令，在对话框中输入： you-get b站视频链接 注意中间有空格 执行后等待命令执行完毕即可，效果如下：","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"learnqiu"},{"title":"hexo博客搭建记录","slug":"tech-hexo-01","date":"2020-12-21T08:11:12.000Z","updated":"2020-12-23T14:09:58.964Z","comments":true,"path":"posts/archives/46522.html/","link":"","permalink":"http://example.com/posts/archives/46522.html/","excerpt":"","text":"1.hexo博客搭建记录参考文献： hexo安装官方文档 Hexo重装与位置移动 免费CDN：jsDeliver-Github-搭建过程记录 前言本文用于记录常用指令，方便平时维护使用。 什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装安装 Hexo 只需几分钟时间，只需按教程进行安装即可， 安装前提 Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本) Git 如果您的电脑中已经安装上述必备程序，请直接前往hexo安装步骤， 安装前准备（若前提满足则跳过此步）如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。 安装 Git Windows：下载并安装 git. Mac：使用 Homebrew, MacPorts 或者下载 安装程序。 Linux (Ubuntu, Debian)：sudo apt-get install git-core Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core 安装 Node.jsNode.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。 其它的安装方法： Windows：通过 nvs（推荐）或者nvm 安装。 Mac：使用 Homebrew 或 MacPorts 安装。 Linux（DEB/RPM-based）：从 NodeSource 安装。 其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导 对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。 安装 Hexo所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。 $ npm install -g hexo-cli 进阶安装和使用对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。 $ npm install hexo 安装以后，可以使用以下两种方式执行 Hexo： npx hexo &lt;command&gt; 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo &lt;command&gt;： echo &#39;PATH=&quot;$PATH:./node_modules/.bin&quot;&#39; &gt;&gt; ~/.profile Node.js 版本限制我们强烈建议永远安装最新版本的 Hexo，以及 推荐的 Node.js 版本。 Hexo 版本 最低兼容 Node.js 版本 5.0+ 10.13.0 4.1 - 4.2 8.10 4.0 8.6 3.3 - 3.9 6.9 3.2 - 3.3 0.12 3.0 - 3.1 0.10 or iojs 0.0.1 - 2.8 0.10 2.Hexo重装与迁移备份只需要将source、themes、_config.yml进行备份即可 迁移更换一个位置进行部署后，只需要将source、themes、_config.yml覆盖到生成的新的博客文件根目录中就可以了 3.githubCDN图床更新上传将你要上传的图片视频保存到刚才那个本地文件夹中（上传的单个文件不要大于50M），然后在文件夹中右键Git Bash Here,执行一下命令： git status //查看状态 git add . //添加所有文件到暂存区 不要忘记后面那个. git commit -m &#39;提交信息&#39; //把文件提交到仓库 git push //推送至远程仓库 4.淘宝镜像（cnmp）的安装和使用打开cmd，输入（前提电脑中安装好了node.js） &quot;npm install -g cnpm --registry=https://registry.npm.taobao.org&quot; 之后就可以使用cnpm install -g ‘name’ 可进行全局安装了 参考文献：淘宝镜像（cnmp）的安装和使用","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客搭建","slug":"hexo博客搭建","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"author":"learnqiu"},{"title":"对hexo-sakura主题的回到顶部白猫图案进行自定义","slug":"tech-hexotheam-01","date":"2020-12-20T07:35:28.000Z","updated":"2020-12-23T13:47:26.852Z","comments":true,"path":"posts/archives/40028.html/","link":"","permalink":"http://example.com/posts/archives/40028.html/","excerpt":"","text":"对hexo-sakura主题的回到顶部白猫图案进行自定义前言sakura主题自带的回到顶部的图案非常好看，原始效果如下： 是一条绳子上面绑着一只可爱的白猫。 但是如何想自己进行回到顶部图案的自定义，该如何做呢？ 下面介绍具体的实现方法： 实现方法1.首先我们找到当前主题回到顶部图案设置的代码位置：你的博客\\themes\\Sakura\\source\\css\\style.css。打开后全局搜索.cd-top定位到图片链接区域，如下图所示： 2.打开这个链接，我们发现是一张图片，保存到你桌面备用。同时我们发现这张图片背景是透明的，尺寸为70*900。 因此想进行自定义，我们*只用自己制作一张70900的背景透明的图片替换原有的图片**就可以了。可以使用图片编辑工具，我使用的是一款在线ps工具，可以在里面对原始图片进行ps，生成新的图片。 3.制作一个70*900的背景透明图片，同时修改步骤一介绍的css代码块中的图片链接为新的图片路径。建议上传到图床后填写图片链接。 完成以上部分后，重新部署网站，就可以看到效果了。 实现效果以下是我自定义的回到顶部效果：","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客美化","slug":"hexo博客美化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"}],"author":"learnqiu"},{"title":"博客上可以随便使用图片么？","slug":"mind-imgcopy-01","date":"2020-12-19T11:51:42.000Z","updated":"2020-12-23T13:47:26.716Z","comments":true,"path":"posts/archives/56930.html/","link":"","permalink":"http://example.com/posts/archives/56930.html/","excerpt":"","text":"博客上可以随便使用图片么？参考文献： 被罚了那么多钱，才知道真正免版权的图片素材是这些！ - 希尔瓦娜斯的文章 - 知乎 如何合法的使用一张图片 - 赵虎的文章 - 知乎 如何避免使用的图片存在侵权风险？ - 求职秘书的回答 - 知乎 收藏备用：60 余家免费正版图片网站，应该是目前最全的的集合了 - 马力在知群的文章 - 知乎 前言最近开通了个人博客，主页和文章配上了非常好看的图片。朋友提醒要关心图片的版权问题，便开始注意相关的信息，对于网站的图片使用相关问题，从网络上整理到如下内容： 网站图片使用相关问题一、相关科普1.《著作权法》第三条规定：图片和文字作品一样，都有版权，而版权就是著作权。 2.未经他人许可，使用他人有著作权的图片，可能构成著作权侵权。 3.免费下载不等于免费使用。 ​ 无协议：需征求作者同意，并标明图片来源。 ​ CC 协议：可以在不通知作者的情况下，“转载”、“使用”其作品。但是不允许：商业性使用、二次创作、改变授权方式的再次分享等行为。 ​ CC0 协议：代表作者完全放弃对其作品的所有著作权，理论上大家可以无条件使用。 二、如何正确使用图片 1.自己原创。这种情况不用担心侵权问题。 2.获得原作者授权。此方法虽好，但一般网络图片难以找到原作者。 3.通过购买图片权限进行使用。需关注购买到的具体使用权限范围。 4.使用CC协议的图片。可以在不通知作者的情况下，“转载”、“使用”其作品。但是不允许：商业性使用、二次创作、改变授权方式的再次分享等行为。 5.使用CC0协议的图片。代表作者完全放弃对其作品的所有著作权，理论上大家可以无条件使用。 6.合理使用。合理使用，是指可以不经著作权人许可，不向其支付报酬而使用已经发表的作品的情形，《著作权法》第22条对合理使用他人已经发表的作品进行了规定，包括12种法定情形。比如：个人学习、研究或者欣赏等等。 三、其他问题​ 1.在使用处标明”图侵删“是否就可以使用图片？ ​ 在原创文章中注明著作权归属或者作品来源，或者声明“侵删”，并不构成侵权免责。 ​ 2.为个人使用或不以盈利为目的，是否可以使用图片？ ​ 是否以盈利为目的，是否为个人使用均不能构成著作权侵权免责条款，但在认定侵权赔偿时，可以成为被考虑侵权赔偿数额的考虑因素。 四、在个人博客中应如何使用图片的建议​ 1.尽量使用原创图片。 ​ 2.选择CC0协议的图片。可以在有CC0协议的无版权网站中进行图片素材下载和使用。 五、无版权网站推荐来自知乎： Unsplash stocksnap shutterstock pngimg freejpg","categories":[{"name":"随想","slug":"随想","permalink":"http://example.com/categories/%E9%9A%8F%E6%83%B3/"}],"tags":[{"name":"博客如何正确使用图片","slug":"博客如何正确使用图片","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E5%9B%BE%E7%89%87/"}],"author":"learnqiu"},{"title":"Typora实现CMMS图床功能","slug":"tech-typora-01","date":"2020-12-19T11:25:27.000Z","updated":"2020-12-23T13:47:26.977Z","comments":true,"path":"posts/archives/5113.html/","link":"","permalink":"http://example.com/posts/archives/5113.html/","excerpt":"","text":"Typora实现CMMS图床功能前言通过之前的文章，我们可以通过配置typora实现图片插入后自动储存并生成图片代码。 但是这些图片资源，储存在本地，hexo发布时会一同打包到网站中去，长久下去整个网站资源会非常的臃肿，不便于维护。 因此，能否将文章的图片上传到图床中去，使用这些图片的文章只用引用这些图床的图片链接，从而解决这种图片打包到网站资源的问题。 Typora经过版本更新后，新增了图床连接的功能，文章插入图片后会自动上传至图床并生成图片连接，非常方便。 解决方案我是按照“史上最强markdown编辑器typora终于支持图床功能了！！！”这边教程进行配置的，主要的步骤如下: 1.注册smms，获取token 2.修改typora设置配置 实现效果插入图片时，会自动上传 上传成功后，自动生成图床图片链接 参考文献 史上最强markdown编辑器typora终于支持图床功能了！！！","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[],"author":"learnqiu"},{"title":"Hexo+Typora实现图片插入文章后自动复制到指定文件夹及生成图片代码","slug":"tech-markdown-04","date":"2020-12-18T06:44:16.000Z","updated":"2020-12-23T13:47:26.932Z","comments":true,"path":"posts/archives/46779.html/","link":"","permalink":"http://example.com/posts/archives/46779.html/","excerpt":"","text":"Hexo+Typora实现图片插入文章后自动复制到指定文件夹及生成图片代码前言很多朋友都是使用Typora来编写Hexo文章的，我们可以通过设置hexo和Typora来实现编写hexo博客时轻松插入和管理图片。 实现方法1.在hexo博客的hexo/source目录下新建一个post-images文件夹用于储存文章图片资源 2.打开Typora软件，在文件-&gt;偏好设置-&gt;图像中进行设置，如下: hexo文章默认路径在`hexo/_posts文件夹下，其中使用的指定路径为： ../../source/post-images/$&#123;filename&#125; 若你的文章存储路径不一致，对应的指定路径也需要更改，目的是定位到新建的图片资源文件夹中，../表示返回上级目录。 3.为保证部署到服务器后，能正常访问，还需要在Typora设置图片根目录，以保证生成的路径支持服务器解析。操作为：在Typora中，点击格式-&gt;图像-&gt;设置图像根目录，在弹出的对话框中将hexo博客/source作为其根目录。 完成以上操作即可实现hexo图片的轻松插入和管理了。 实现效果截图复制图片，在文章位置中粘贴图片，效果如下： 同时对应图片会复制到hexo博客/source/post-images/文章名文件夹中 非常方便 参考文献 typora + hexo博客中插入图片 后记接下来会写一篇关于typora+图床实现插入图片自动上传的文章介绍","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客写作","slug":"hexo博客写作","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"},{"name":"Typora","slug":"Typora","permalink":"http://example.com/tags/Typora/"}],"author":"learnqiu"},{"title":"在Typora中如何配置图片插入自动存放到指定位置并生成图片代码","slug":"tech-markdown-03","date":"2020-12-18T05:55:56.000Z","updated":"2020-12-23T13:47:26.910Z","comments":true,"path":"posts/archives/40059.html/","link":"","permalink":"http://example.com/posts/archives/40059.html/","excerpt":"","text":"在Typora中如何配置图片插入自动存放到指定位置并生成图片代码前言使用markdown在文章中插入指定的图片时，图片来源一般分为以下几种： 本地图片：截图和下载到本地的图片 网络图片：网络链接表示的图片 图片插入时，步骤比较复杂： 插入图片代码-&gt;填入本地或者网络路径 这样的操作首先对文章的图片没有集中管理，链接的都是图片原地址，原图丢失文章就无法显示对应图片。对于网络图片的话，还会受图片所在网络服务器的影响，加载较慢。 配置方法Typora对于这种问题有了很好的解决方案，通过简单的配置就可以实现只用将图片复制到文章中，就能实现: 图片备份到指定文件夹 自动插入图片代码 配置步骤如下： 1.在工具栏选择文件-偏好设置。 2.在弹出的偏好设置窗口中，选择图像，并勾选前三项。 ​ 同时对备份的路径进行设置， ​ 无特殊操作（不能选择这个）：代表插入图片时不复制图片，使用图片原地址 ​ 复制开头的三个选项：在三个中进行选择，来设置图片复制路径。 设置完毕后，此功能就启用了。是不是很简单的配置。 实现效果配置完毕后，我们分别对本地和网络图片进行设置。我复制路径设置的为**./${filename**，代表着图片复制到文章所在目录下面与文章名同名的文件夹中。你们可以根据自己要求来设置。 本地图片： 1.截图：使用qq自带截图工具进行截图，点击完成，图片会自动复制 在文章中选择指定位置进行粘贴，效果如下： 自动生成图片代码 复制图片到指定路径 2.复制本地图片：效果与截图完成后一致，不再赘述。 网络图片 在网络上找到指定的图片，右击选择复制图片 在文章中选择指定位置进行粘贴，效果如下： 同时图片也会自动复制到指定位置 后记over，下篇文章会介绍hexo+typora实现hexo编写文章轻松插入图片。","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客写作","slug":"hexo博客写作","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"},{"name":"Typora","slug":"Typora","permalink":"http://example.com/tags/Typora/"}],"author":"learnqiu"},{"title":"这是我的转载","slug":"copy-mycopy","date":"2020-12-17T12:48:21.000Z","updated":"2020-12-23T13:47:26.681Z","comments":true,"path":"posts/archives/29603.html/","link":"","permalink":"http://example.com/posts/archives/29603.html/","excerpt":"","text":"这是我的转载未完待续。。。","categories":[{"name":"转载","slug":"转载","permalink":"http://example.com/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[],"author":"learnqiu"},{"title":"这是我的随想","slug":"mind-mymind","date":"2020-12-17T12:47:30.000Z","updated":"2020-12-23T13:47:26.799Z","comments":true,"path":"posts/archives/18029.html/","link":"","permalink":"http://example.com/posts/archives/18029.html/","excerpt":"","text":"这是我的随想未完待续。。。","categories":[{"name":"随想","slug":"随想","permalink":"http://example.com/categories/%E9%9A%8F%E6%83%B3/"}],"tags":[],"author":"learnqiu"},{"title":"这是我的资源","slug":"download-mydl","date":"2020-12-17T12:46:17.000Z","updated":"2020-12-23T13:47:26.699Z","comments":true,"path":"posts/archives/64744.html/","link":"","permalink":"http://example.com/posts/archives/64744.html/","excerpt":"","text":"这是我的资源未完待续。。。","categories":[{"name":"资源","slug":"资源","permalink":"http://example.com/categories/%E8%B5%84%E6%BA%90/"}],"tags":[],"author":"learnqiu"},{"title":"这是我的图集","slug":"photo-myphoto","date":"2020-12-17T12:36:46.000Z","updated":"2020-12-23T13:47:26.784Z","comments":true,"path":"posts/archives/41636.html/","link":"","permalink":"http://example.com/posts/archives/41636.html/","excerpt":"","text":"这是我的图集未完待续。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"}],"author":"learnqiu"},{"title":"这是我的书单","slug":"book-mybook","date":"2020-12-17T12:36:17.000Z","updated":"2020-12-23T13:47:26.654Z","comments":true,"path":"posts/archives/31444.html/","link":"","permalink":"http://example.com/posts/archives/31444.html/","excerpt":"","text":"这是我的书单未完待续。。。","categories":[{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"悦读","slug":"悦读","permalink":"http://example.com/tags/%E6%82%A6%E8%AF%BB/"}],"author":"learnqiu"},{"title":"Typora：推荐一款简洁的Markdown编辑器","slug":"tech-markdown-02","date":"2020-12-17T06:15:12.000Z","updated":"2020-12-23T13:47:26.884Z","comments":true,"path":"posts/archives/7629.html/","link":"","permalink":"http://example.com/posts/archives/7629.html/","excerpt":"","text":"Typora：推荐一款简洁的Markdown编辑器Typora介绍下载及安装官网入口：Typora 下载地址：Windows版本 Linux版本 前言如果你和我一样： ​ 喜欢简洁的风格 ​ 有着文艺的内心 ​ 注重美观的感受 ​ 希望所见即所得 那么恭喜你发现宝藏 Typora 什么是Typora Typora是一款轻便简洁的Markdown编辑器 它删除了预览窗口、模式切换器、Markdown源代码的语法符号以及所有其他不必要的干扰。同时，它提供了真正的实时预览功能，可帮助您专注于内容本身。 即时渲染技术所见即所得。即时渲染技术就是说你写Markdown就像和写Word文档一样，文本样式即时展示，不需要提交到Markdown浏览工具进行预览。 免费对，没错这是一款免费的Markdown编辑工具 界面简洁下面是Typora的界面，简洁、简洁还是简洁，是不是感觉自己打开了自带的文本编辑器 基本功能及时渲染实时展示图片、标题、列表、表格、代码块、数学公式、图表及基本内联样式等等。。。 1.图片及标题 2.列表及表格 3.代码片段 可以选择语言进行涂色 4.内联样式 下面是来自官网的介绍截图，还是比较丰富的 5.其他 也支持显示其他的内容，比如数学公食、图表等，不常用，大家可以自己下载安装后探索 快捷键操作对于文档编辑时进行的样式操作提供快捷键，使用起来非常方便 1.段落操作 2.格式操作 辅助功能整理档案Typora可让您轻松管理文件，同时提供文件树面板和文章（文件列表）侧面面板，可让您轻松管理文件。以自己的方式整理文件，包括放入同步服务，例如Dropbox或iCloud。 轮廓面板在大纲面板中自动查看文档的大纲结构，使您可以快速浏览文档并单击一下即可跳至任何部分。 导入导出可导出为PDF。支持导出或导入更多格式，包括docx，OpenOffice，LaTeX，MediaWiki，Epub等。 字数查看文档的字数，字符，行数或阅读分钟数。 对焦模式和打字机模式聚焦模式可以使其他行模糊，从而仅使您聚焦于当前行。打字机模式始终将当前活动的行保持在窗口中间。 自动配对自动完成一对括号和引号，就像代码编辑器一样。此外，还有一个选项可以自动配对降价符号，例如*或_。 自定义主题提供五款默认主题自由选择，个人比较喜欢系统默认的github主题 好了，以上就是Typora的全部介绍内容了，更多的功能可以自己去探索哦。也可以前往官网了解 参考文献 Typora官网 后记关于Typora如果在粘贴图片时进行图片自动路径保持及图片代码生成，接下来我会再出一个帖子进行介绍","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客写作","slug":"hexo博客写作","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}],"author":"learnqiu"},{"title":"用hexo编写文章，来学学简单的Markdown语法吧","slug":"tech-markdown-01","date":"2020-12-16T12:42:36.000Z","updated":"2020-12-23T13:47:26.868Z","comments":true,"path":"posts/archives/7188.html/","link":"","permalink":"http://example.com/posts/archives/7188.html/","excerpt":"","text":"本文主要介绍hexo简单的Markdown语法 这是本站第一篇文章，如有疏漏，可随时指正哦 hexo简单的Markdown语法1.1 斜体和粗体写法： *这是斜体* 或 _这也是斜体_ **这是粗体** ***这是加粗斜体*** ~~这是删除线~~ 效果：这是斜体 或 这也是斜体这是粗体这是加粗斜体这是删除线 1.2 分级标题写法： # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 效果： 1.3 超链接写法： 行内形式：[我的博客](https://kevinpu.github.io/) 参考形式：[我的博客][1]，[我的网站][2] [1]:https://learnqiu.github.io/ [2]:http://www.learnqiu.qiu/ 自动链接：我的博客地址&lt;https://learnqiu.github.io/&gt; 效果：行内形式：我的博客参考形式：我的博客，我的网站 自动链接：我的博客地址https://learnqiu.github.io/ 1.4 图片资源图片素材按官方教程说法，可统一放置在source/images目录中，引用方式如下： ![](/images/image.jpg) 效果： 1.5 插入代码片段写法： /忽略此处/ ``` bash 代码片段内容 /忽略此处/ ``` 效果： 代码片段内容 目前，只是介绍了一些简单的语法，后续会逐渐更新更多语法内容~ 参考文献 [用Hexo写出第一篇博客][https://www.jianshu.com/p/56d99a3049a5]","categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo博客写作","slug":"hexo博客写作","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}],"author":"learnqiu"}],"categories":[{"name":"技术","slug":"技术","permalink":"http://example.com/categories/%E6%8A%80%E6%9C%AF/"},{"name":"生活","slug":"生活","permalink":"http://example.com/categories/%E7%94%9F%E6%B4%BB/"},{"name":"随想","slug":"随想","permalink":"http://example.com/categories/%E9%9A%8F%E6%83%B3/"},{"name":"转载","slug":"转载","permalink":"http://example.com/categories/%E8%BD%AC%E8%BD%BD/"},{"name":"资源","slug":"资源","permalink":"http://example.com/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://example.com/tags/SQL/"},{"name":"ORACLE","slug":"ORACLE","permalink":"http://example.com/tags/ORACLE/"},{"name":"剧集","slug":"剧集","permalink":"http://example.com/tags/%E5%89%A7%E9%9B%86/"},{"name":"hexo博客搭建","slug":"hexo博客搭建","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"},{"name":"随想","slug":"随想","permalink":"http://example.com/tags/%E9%9A%8F%E6%83%B3/"},{"name":"hexo博客美化","slug":"hexo博客美化","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"},{"name":"博客如何正确使用图片","slug":"博客如何正确使用图片","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E5%9B%BE%E7%89%87/"},{"name":"hexo博客写作","slug":"hexo博客写作","permalink":"http://example.com/tags/hexo%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/"},{"name":"Typora","slug":"Typora","permalink":"http://example.com/tags/Typora/"},{"name":"图集","slug":"图集","permalink":"http://example.com/tags/%E5%9B%BE%E9%9B%86/"},{"name":"悦读","slug":"悦读","permalink":"http://example.com/tags/%E6%82%A6%E8%AF%BB/"},{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]}